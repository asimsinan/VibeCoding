openapi: 3.0.0
info:
  title: Mental Health Journal API
  version: 1.0.0
  description: API for mood tracking and trend visualization
  contact:
    name: Mental Health Journal API Support
    email: support@moodtracker.app
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://moodtracker.app/api/v1
    description: Production server
  - url: http://localhost:3000/api/v1
    description: Development server
paths:
  /mood-entries:
    get:
      summary: Get mood entries
      description: Retrieve user's mood entries with optional date range filtering
      operationId: getMoodEntries
      tags:
        - Mood Entries
      parameters:
        - name: startDate
          in: query
          description: Start date for filtering entries (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date
            example: "2024-01-01"
        - name: endDate
          in: query
          description: End date for filtering entries (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date
            example: "2024-12-31"
        - name: limit
          in: query
          description: Maximum number of entries to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          description: Number of entries to skip
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of mood entries retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MoodEntry'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-01-28T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create mood entry
      description: Create a new mood entry with rating and optional notes
      operationId: createMoodEntry
      tags:
        - Mood Entries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoodEntryRequest'
            examples:
              basic_entry:
                summary: Basic mood entry
                value:
                  rating: 7
                  date: "2024-01-28"
              entry_with_notes:
                summary: Mood entry with notes
                value:
                  rating: 5
                  notes: "Feeling a bit overwhelmed with work today"
                  date: "2024-01-28"
      responses:
        '201':
          description: Mood entry created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/MoodEntry'
                  message:
                    type: string
                    example: "Mood entry created successfully"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-01-28T10:30:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Conflict - Entry already exists for this date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /mood-entries/{id}:
    get:
      summary: Get mood entry by ID
      description: Retrieve a specific mood entry by its ID
      operationId: getMoodEntryById
      tags:
        - Mood Entries
      parameters:
        - name: id
          in: path
          description: Unique identifier for the mood entry
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Mood entry retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/MoodEntry'
                  timestamp:
                    type: string
                    format: date-time
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update mood entry
      description: Update an existing mood entry
      operationId: updateMoodEntry
      tags:
        - Mood Entries
      parameters:
        - name: id
          in: path
          description: Unique identifier for the mood entry
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoodEntryUpdateRequest'
      responses:
        '200':
          description: Mood entry updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/MoodEntry'
                  message:
                    type: string
                    example: "Mood entry updated successfully"
                  timestamp:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete mood entry
      description: Delete a specific mood entry
      operationId: deleteMoodEntry
      tags:
        - Mood Entries
      parameters:
        - name: id
          in: path
          description: Unique identifier for the mood entry
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Mood entry deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Mood entry deleted successfully"
                  timestamp:
                    type: string
                    format: date-time
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /mood-trends:
    get:
      summary: Get mood trends
      description: Get aggregated mood data for chart visualization
      operationId: getMoodTrends
      tags:
        - Mood Trends
      parameters:
        - name: period
          in: query
          description: Time period for trend analysis
          required: true
          schema:
            type: string
            enum: [7, 30, 90, 365]
            example: 30
        - name: startDate
          in: query
          description: Start date for trend analysis (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date for trend analysis (ISO 8601 format)
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Mood trends retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/MoodTrend'
                  timestamp:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /user/settings:
    get:
      summary: Get user settings
      description: Retrieve user preferences and settings
      operationId: getUserSettings
      tags:
        - User Settings
      responses:
        '200':
          description: User settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserSettings'
                  timestamp:
                    type: string
                    format: date-time
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update user settings
      description: Update user preferences and settings
      operationId: updateUserSettings
      tags:
        - User Settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettingsRequest'
      responses:
        '200':
          description: User settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/UserSettings'
                  message:
                    type: string
                    example: "User settings updated successfully"
                  timestamp:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    MoodEntry:
      type: object
      required:
        - id
        - rating
        - date
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the mood entry
          example: "123e4567-e89b-12d3-a456-426614174000"
        rating:
          type: integer
          minimum: 1
          maximum: 10
          description: Mood rating on a scale of 1-10
          example: 7
        notes:
          type: string
          maxLength: 500
          description: Optional notes about the mood
          example: "Feeling good today, had a great workout"
        date:
          type: string
          format: date
          description: Date of the mood entry (ISO 8601 format)
          example: "2024-01-28"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the entry was created
          example: "2024-01-28T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the entry was last updated
          example: "2024-01-28T10:30:00Z"
        synced:
          type: boolean
          description: Whether the entry has been synced to cloud storage
          example: true
    MoodEntryRequest:
      type: object
      required:
        - rating
        - date
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 10
          description: Mood rating on a scale of 1-10
          example: 7
        notes:
          type: string
          maxLength: 500
          description: Optional notes about the mood
          example: "Feeling good today, had a great workout"
        date:
          type: string
          format: date
          description: Date of the mood entry (ISO 8601 format)
          example: "2024-01-28"
    MoodEntryUpdateRequest:
      type: object
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 10
          description: Updated mood rating on a scale of 1-10
          example: 8
        notes:
          type: string
          maxLength: 500
          description: Updated notes about the mood
          example: "Updated: Feeling even better after lunch"
        date:
          type: string
          format: date
          description: Updated date of the mood entry (ISO 8601 format)
          example: "2024-01-28"
    MoodTrend:
      type: object
      required:
        - period
        - dataPoints
        - statistics
      properties:
        period:
          type: string
          description: Time period for the trend analysis
          example: "30"
        dataPoints:
          type: array
          items:
            $ref: '#/components/schemas/MoodDataPoint'
          description: Array of mood data points for the trend
        statistics:
          $ref: '#/components/schemas/MoodStatistics'
        startDate:
          type: string
          format: date
          description: Start date of the trend period
          example: "2024-01-01"
        endDate:
          type: string
          format: date
          description: End date of the trend period
          example: "2024-01-30"
    MoodDataPoint:
      type: object
      required:
        - date
        - rating
      properties:
        date:
          type: string
          format: date
          description: Date of the mood data point
          example: "2024-01-28"
        rating:
          type: number
          description: Average mood rating for this date
          example: 7.5
        count:
          type: integer
          description: Number of entries for this date
          example: 1
    MoodStatistics:
      type: object
      required:
        - average
        - min
        - max
        - totalEntries
      properties:
        average:
          type: number
          description: Average mood rating for the period
          example: 7.2
        min:
          type: integer
          description: Minimum mood rating for the period
          example: 3
        max:
          type: integer
          description: Maximum mood rating for the period
          example: 10
        totalEntries:
          type: integer
          description: Total number of mood entries in the period
          example: 25
        trend:
          type: string
          enum: [increasing, decreasing, stable]
          description: Overall trend direction
          example: "increasing"
    UserSettings:
      type: object
      required:
        - id
        - theme
        - chartPreferences
        - dataRetention
        - privacy
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
          example: "123e4567-e89b-12d3-a456-426614174000"
        theme:
          type: string
          enum: [light, dark, auto]
          description: User's preferred theme
          example: "auto"
        chartPreferences:
          $ref: '#/components/schemas/ChartPreferences'
        dataRetention:
          type: integer
          description: Number of days to retain mood data
          example: 365
        privacy:
          $ref: '#/components/schemas/PrivacySettings'
        notifications:
          type: boolean
          description: Whether to receive mood tracking reminders
          example: true
        createdAt:
          type: string
          format: date-time
          description: Timestamp when settings were created
          example: "2024-01-28T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when settings were last updated
          example: "2024-01-28T10:30:00Z"
    UserSettingsRequest:
      type: object
      properties:
        theme:
          type: string
          enum: [light, dark, auto]
          description: User's preferred theme
          example: "dark"
        chartPreferences:
          $ref: '#/components/schemas/ChartPreferences'
        dataRetention:
          type: integer
          minimum: 30
          maximum: 3650
          description: Number of days to retain mood data
          example: 365
        privacy:
          $ref: '#/components/schemas/PrivacySettings'
        notifications:
          type: boolean
          description: Whether to receive mood tracking reminders
          example: true
    ChartPreferences:
      type: object
      properties:
        defaultPeriod:
          type: string
          enum: [7, 30, 90, 365]
          description: Default time period for charts
          example: "30"
        chartType:
          type: string
          enum: [line, bar, area]
          description: Preferred chart type
          example: "line"
        showGrid:
          type: boolean
          description: Whether to show grid lines on charts
          example: true
        showDataPoints:
          type: boolean
          description: Whether to show individual data points
          example: true
    PrivacySettings:
      type: object
      properties:
        dataSharing:
          type: boolean
          description: Whether to allow data sharing for research
          example: false
        cloudSync:
          type: boolean
          description: Whether to enable cloud synchronization
          example: true
        exportData:
          type: boolean
          description: Whether to allow data export
          example: true
    Pagination:
      type: object
      required:
        - limit
        - offset
        - total
        - hasMore
      properties:
        limit:
          type: integer
          description: Maximum number of items per page
          example: 100
        offset:
          type: integer
          description: Number of items skipped
          example: 0
        total:
          type: integer
          description: Total number of items available
          example: 250
        hasMore:
          type: boolean
          description: Whether there are more items available
          example: true
    ErrorResponse:
      type: object
      required:
        - success
        - error
        - timestamp
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Error code for programmatic handling
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: Human-readable error message
              example: "Invalid mood rating. Must be between 1 and 10."
            details:
              type: object
              description: Additional error details
              example:
                field: "rating"
                value: 15
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the error occurred
          example: "2024-01-28T10:30:00Z"
  responses:
    BadRequest:
      description: Bad request - Invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              code: "VALIDATION_ERROR"
              message: "Invalid input data"
              details:
                field: "rating"
                value: 15
            timestamp: "2024-01-28T10:30:00Z"
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              code: "NOT_FOUND"
              message: "Mood entry not found"
            timestamp: "2024-01-28T10:30:00Z"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              code: "INTERNAL_ERROR"
              message: "An unexpected error occurred"
            timestamp: "2024-01-28T10:30:00Z"
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication
security:
  - ApiKeyAuth: []
tags:
  - name: Mood Entries
    description: Operations related to mood entries
  - name: Mood Trends
    description: Operations related to mood trend analysis
  - name: User Settings
    description: Operations related to user preferences and settings
