name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: node scripts/security-audit.js
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Run integration tests
      run: npm test -- --testPathPattern="contract|mood-core|api" --passWithNoTests
    
    - name: Run E2E tests
      run: npm run test:e2e
      if: matrix.node-version == '20.x'
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        retention-days: 7

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        npm ci
        node scripts/security-audit.js
    
    - name: Run dependency audit
      run: npm audit --audit-level=moderate
    
    - name: Check for vulnerabilities
      run: npx audit-ci --moderate

  build-and-deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
    
    - name: Deploy to AWS (Alternative)
      if: false  # Enable if using AWS
      run: |
        # AWS deployment commands would go here
        echo "AWS deployment placeholder"

  database-migration:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PostgreSQL
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '15'
        postgresql db: moodtracker_test
        postgresql user: postgres
        postgresql password: postgres
    
    - name: Run database migrations
      run: |
        # Database migration commands would go here
        echo "Database migration placeholder"
    
    - name: Test database connection
      run: |
        # Test database connection
        echo "Database connection test placeholder"

  performance-test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: |
        npm start &
        sleep 30
    
    - name: Run Lighthouse CI
      run: |
        npx @lhci/cli@0.12.x autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    
    - name: Performance budget check
      run: |
        # Performance budget validation
        echo "Performance budget check placeholder"
